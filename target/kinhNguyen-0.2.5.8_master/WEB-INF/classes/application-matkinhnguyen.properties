#spring.datasource.url=jdbc:mysql://146.190.6.177:3306/hanSoloDB?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.url=jdbc:mysql://localhost:3306/hanSoloDB?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username=thienkyo
spring.datasource.password=Hollygrant!11
spring.datasource.driverClassName=com.mysql.jdbc.Driver

server.port=80

#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.platform=mysql
#spring.datasource.data=emp_data.sql
#spring.jpa.generate-ddl=true

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
#spring.datasource.timeBetweenEvictionRunsMillis = 60000
spring.datasource.validationQuery = SELECT 1
#spring.datasource.initialize=false
#spring.datasource.continueOnError=true

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy


# Directory where will be saved uploaded files. Make sure that the application
# have write permissions on such directory.
hanSolo.uploadedFiles.rootDir=/root/kinhNguyen/images/
hanSolo.uploadedFiles.thumbnail = ${hanSolo.uploadedFiles.rootDir}thumbnail
hanSolo.uploadedFiles.product =${hanSolo.uploadedFiles.rootDir}product
hanSolo.uploadedFiles.blog =${hanSolo.uploadedFiles.rootDir}blog
hanSolo.uploadedFiles.blog.detail =${hanSolo.uploadedFiles.rootDir}blog/details
hanSolo.uploadedFiles.banner =${hanSolo.uploadedFiles.rootDir}banner
hanSolo.uploadedFiles.supplier =${hanSolo.uploadedFiles.rootDir}supplier
hanSolo.uploadedFiles.collectionThumbnail =${hanSolo.uploadedFiles.rootDir}product/collections
hanSolo.uploadedFiles.bizExpense =${hanSolo.uploadedFiles.rootDir}bizExpense

# ========================
# SPRING BOOT: MULTIPART
# ========================

# Set the file size limit (default 1Mb). If you want to specify that files be
# unlimited set the multipart.maxFileSize property to -1.
multipart.maxFileSize = 1Mb
spring.http.multipart.maxFileSize=1MB

# Set the total request size for a multipart/form-data (default 10Mb)
#multipart.maxRequestSize = 10Mb
